<Window x:Class="SmartWorking.Office.TabsGui.MainWindow" Style="{StaticResource mainWindow}"
        
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:View="clr-namespace:SmartWorking.Office.TabsGui.Shared.View" 
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
        xmlns:TabsGui="clr-namespace:SmartWorking.Office.TabsGui" 
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4" 
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:Cars="clr-namespace:SmartWorking.Office.TabsGui.Controls.Cars"
        xmlns:AdministrationGroup="clr-namespace:SmartWorking.Office.TabsGui.Controls.MainGroups.AdministrationGroup" xmlns:ReportsGroup="clr-namespace:SmartWorking.Office.TabsGui.Controls.MainGroups.ReportsGroup" xmlns:SettingsGroup="clr-namespace:SmartWorking.Office.TabsGui.Controls.MainGroups.SettingsGroup" xmlns:ViewModel="clr-namespace:SmartWorking.Office.TabsGui.Shared.ViewModel" xmlns:SaleGroup="clr-namespace:SmartWorking.Office.TabsGui.Controls.MainGroups.SaleGroup"
        xmlns:Engine="clr-namespace:WPFLocalizeExtension.Engine;assembly=WPFLocalizeExtension" xmlns:MessageBox="clr-namespace:SmartWorking.Office.TabsGui.Shared.ViewModel.MessageBox" xmlns:ViewMessageBox="clr-namespace:SmartWorking.Office.TabsGui.Shared.View.MessageBox" Engine:LocalizeDictionary.DesignCulture="en">
    <Window.DataContext>
        <TabsGui:MainWindowViewModel  />
    </Window.DataContext>
    <!--<Window.Resources>
        <Style x:Key="progressGrid" TargetType="{x:Type Grid}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsActionExecuting}" Value="True">
                    <Setter Property="Visibility" Value="Visible" />               
                </DataTrigger>
                <DataTrigger Binding="{Binding IsActionExecuting}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>-->
    <Grid >
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="Loaded">
                <cmd:EventToCommand Command="{Binding LoadedCommand, Mode=OneWay}" PassEventArgsToCommand="True" />
            </i:EventTrigger>
        </i:Interaction.Triggers>
        
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Background="LightGray" >
            <Grid.Visibility>
                <MultiBinding Converter="{StaticResource visibilitisANDBinaryConverter}">
                    <MultiBinding.Bindings>
                        <Binding Path="ModalDialogProvider.VisibleModalDialog" Converter="{StaticResource enumBooleanConverter}" 
                                 ConverterParameter="{x:Static View:VisibleModalDialogEnum.ProgressBarModalDialog}" />
                    </MultiBinding.Bindings>
                </MultiBinding>
            </Grid.Visibility>
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" DataContext="{Binding ModalDialogProvider.ProgressBarViewModel}">
                <ProgressBar IsIndeterminate="True" Height="50" Width="400" />
                <TextBlock Margin="15" FontSize="16" TextWrapping="Wrap" Text="{Binding ProgressText}"/>                
            </StackPanel>
        </Grid>
        <Grid Background="LightGray" VerticalAlignment="Center" HorizontalAlignment="Center" >
            <Grid.Visibility>
                <MultiBinding Converter="{StaticResource visibilitisANDBinaryConverter}">
                    <MultiBinding.Bindings>
                        <Binding Path="ModalDialogProvider.VisibleModalDialog" Converter="{StaticResource enumBooleanConverter}" 
                                 ConverterParameter="{x:Static View:VisibleModalDialogEnum.MessageBoxModalDialog}" />
                    </MultiBinding.Bindings>
                </MultiBinding>
            </Grid.Visibility>            
            <ViewMessageBox:MessageBoxControl MaxHeight="450" Width="600"  DataContext="{Binding ModalDialogProvider.MessageBoxDialogViewModel}"/>
        </Grid>
        <Grid Background="LightGray" VerticalAlignment="Center" HorizontalAlignment="Center" >
            <Grid.Visibility>
                <MultiBinding Converter="{StaticResource visibilitisANDBinaryConverter}">
                    <MultiBinding.Bindings>
                        <Binding Path="ModalDialogProvider.VisibleModalDialog" Converter="{StaticResource enumBooleanConverter}" 
                                 ConverterParameter="{x:Static View:VisibleModalDialogEnum.LogginModalDialog}" />
                    </MultiBinding.Bindings>
                </MultiBinding>
            </Grid.Visibility>
            <ViewMessageBox:LogginControl MaxHeight="450" Width="600"  DataContext="{Binding ModalDialogProvider.LogginModalDialogViewModel}"/>
        </Grid>
        <Grid Background="LightGray" VerticalAlignment="Center" HorizontalAlignment="Center" >
            <Grid.Visibility>
                <MultiBinding Converter="{StaticResource visibilitisANDBinaryConverter}">
                    <MultiBinding.Bindings>
                        <Binding Path="ModalDialogProvider.VisibleModalDialog" Converter="{StaticResource enumBooleanConverter}" 
                                 ConverterParameter="{x:Static View:VisibleModalDialogEnum.InputModalDialog}" />
                    </MultiBinding.Bindings>
                </MultiBinding>
            </Grid.Visibility>
            <ViewMessageBox:InputControl MaxHeight="450" Width="600"  DataContext="{Binding ModalDialogProvider.InputModalDialogViewModel}"/>
        </Grid>
        <TabControl Style="{StaticResource horizontalMainTabControl}" x:Name="mainTabControl" SelectedItem="{Binding SelectedTab}" IsSynchronizedWithCurrentItem="True">
            <TabControl.Visibility>
                <MultiBinding Converter="{StaticResource visibilitisANDBinaryConverter}">
                    <MultiBinding.Bindings>
                        <Binding Path="ModalDialogProvider.VisibleModalDialog" Converter="{StaticResource enumBooleanConverter}" ConverterParameter="{x:Static View:VisibleModalDialogEnum.NoneModalDialog}" />
                    </MultiBinding.Bindings>
                </MultiBinding>
            </TabControl.Visibility>
            <i:Interaction.Triggers>
                <i:EventTrigger  EventName="SelectionChanged">
                    <cmd:EventToCommand Command="{Binding TabChangedCommand, Mode=OneWay}" PassEventArgsToCommand="True" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <TabItem Header="{Binding Name}" DataContext="{Binding SaleGroupViewModel}"  >
                <SaleGroup:SaleGroupControl  />
            </TabItem>

            <TabItem Header="{Binding Name}" DataContext="{Binding ReportsGroupViewModel}">
                <ReportsGroup:ReportsGroupControl/>    
            </TabItem>

            <TabItem Header="{Binding Name}" DataContext="{Binding AdministrationGroupViewModel}">
                <AdministrationGroup:AdministrationGroupControl /> 
            </TabItem>

            <TabItem Header="{Binding Name}" DataContext="{Binding SettingsGroupViewModel}" >
                <SettingsGroup:SettingsGroupControl/>
            </TabItem>
        </TabControl>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" /> <!--TODO: should be removed-->
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBlock Height="20" Text="{Binding StatusText}" Foreground="{Binding StatusTextColor}" />            
            <StackPanel Grid.Column="1" Orientation="Horizontal" Background="Yellow" >
                <StackPanel.Visibility>
                    <MultiBinding Converter="{StaticResource visibilitisANDBinaryConverter}">
                        <MultiBinding.Bindings>
                            <Binding Path="IsBlockedAccessLevel" Converter="{StaticResource boolToOppositeBoolConverter}" />
                        </MultiBinding.Bindings>
                    </MultiBinding>
                </StackPanel.Visibility>
                <RadioButton GroupName="Roles" Content="Admin"  IsChecked="{Binding AccessLevel, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static ViewModel:AccessLevels.AdministratorLevel}}" />
                <RadioButton GroupName="Roles" Content="WOS"   IsChecked="{Binding AccessLevel, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static ViewModel:AccessLevels.WOSLevel}}" />
                <RadioButton GroupName="Roles" Content="Operator" IsChecked="{Binding AccessLevel, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static ViewModel:AccessLevels.OperatorLevel}}" />
                <CheckBox Content="DebugMode" IsChecked="{Binding IsDebugMode}" /> 
            </StackPanel>

            <StackPanel Grid.Column="2" Orientation="Horizontal"  >
                
                <Button Command="{Binding LoggoutCommand}" Content="Loggout" />
            </StackPanel>
        </Grid>
    </Grid>
</Window>
