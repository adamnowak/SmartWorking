<View:ListUserControl x:Class="SmartWorking.Office.TabsGui.Controls.Cars.CarListControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:Cars="clr-namespace:SmartWorking.Office.TabsGui.Controls.Cars" xmlns:Converters="clr-namespace:SmartWorking.Office.TabsGui.Converters" xmlns:Interfaces="clr-namespace:SmartWorking.Office.Services.Interfaces;assembly=SmartWorking.Office.Services.Interfaces" xmlns:ViewModel="clr-namespace:SmartWorking.Office.TabsGui.Shared.ViewModel" xmlns:View="clr-namespace:SmartWorking.Office.TabsGui.Shared.View" mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="400">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Visibility="{Binding FiltersVisibility, RelativeSource={RelativeSource  FindAncestor, AncestorType={x:Type UserControl}}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="strFilter:" />
            <TextBox Grid.Column="1" Text="{Binding Filter}" />
            <Button Grid.Column="2" Content="strApply" Command="{Binding ApplyFilterCommand}" />
        </Grid>

        

        <DataGrid Grid.Row="1"  SelectedItem="{Binding SelectedItem}" DataContext="{Binding Items}" ItemsSource="{Binding Items}" >
            
            <DataGrid.Resources>
                <View:BindingProxy x:Key="proxy" Data="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Car.IsDeactive}" Value="True">
                            <Setter Property="Background" Value="{StaticResource dataGridDeactiveRowBackground}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Car.IsDeleted}" Value="True">
                            <Setter Property="Background" Value="{StaticResource dataGridDeletedRowBackground}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <!--Debug only-->
                <DataGridTextColumn Header="str_Id" Binding="{Binding Car.Id}" Visibility="{Binding Path=Data.MainViewModel.IsDebugMode, Source={StaticResource proxy},
                                    Converter={StaticResource enumVisibilityConverter}, ConverterParameter={StaticResource StaticTrue}}" />
                <!--End Debug only-->
                <DataGridTextColumn Header="str_Symbol" Binding="{Binding Car.InternalName}" />
                <DataGridTextColumn Header="str_Numer Rejestracyjny" Binding="{Binding Car.RegistrationNumber}" />
                <DataGridTextColumn Header="str_Rodzaj samochodu"  >
                    <DataGridTextColumn.Binding>
                        <MultiBinding Converter="{StaticResource descriptionIndexedConverter}" >
                            <Binding Path="Car.CarType"/>
                            <Binding Source="{x:Static Cars:CarTypes.Instance}" Path="Items"/>
                        </MultiBinding>
                    </DataGridTextColumn.Binding>
                </DataGridTextColumn>
                <DataGridTextColumn Header="str_Ładowność" Binding="{Binding Car.Capacity}" />
                <DataGridTextColumn Header="str_Rodzaj transportu"  >
                    <DataGridTextColumn.Binding>
                        <MultiBinding Converter="{StaticResource descriptionIndexedConverter}" >
                            <Binding Path="Car.TransportType"/>
                            <Binding Source="{x:Static Cars:TransportTypes.Instance}" Path="Items"/>
                        </MultiBinding>
                    </DataGridTextColumn.Binding>
                </DataGridTextColumn>
                <DataGridTextColumn Header="str_Protector" >
                    <DataGridTextColumn.Binding>
                        <MultiBinding StringFormat="{}{0} {1}" > <!--Converter="{StaticResource stringConcatenationMultiConverter}" >-->
                            <Binding Path="Driver.Name" />
                            <Binding Path="Driver.Surname" />
                        </MultiBinding>
                    </DataGridTextColumn.Binding>
                </DataGridTextColumn><!--Binding="{Binding Driver.Name}" />-->
            </DataGrid.Columns>
        </DataGrid>
        <GroupBox Grid.Row="2" Visibility="{Binding FiltersVisibility, RelativeSource={RelativeSource  FindAncestor, AncestorType={x:Type UserControl}}}">
            <StackPanel Orientation="Horizontal" >
            
                <RadioButton  Content="strOnlyActivate" IsChecked="{Binding ListItemsFilter, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static Interfaces:ListItemsFilterValues.OnlyActive}}"/>
                <RadioButton  Content="strIncludeDeactive" IsChecked="{Binding ListItemsFilter, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static Interfaces:ListItemsFilterValues.IncludeDeactive}}"/>
                <RadioButton  Content="strAll" 
                             IsChecked="{Binding ListItemsFilter, Converter={StaticResource enumBooleanConverter}, ConverterParameter={x:Static Interfaces:ListItemsFilterValues.All}}"
                             Visibility="{Binding Path=MainViewModel.AccessLevel, Converter={StaticResource enumVisibilityConverter}, ConverterParameter={x:Static ViewModel:AccessLevels.AdministratorLevel}}" />
            
        </StackPanel>
        </GroupBox>
    </Grid>
</View:ListUserControl>
