
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace SmartWorking.Office.PrimitiveEntities
{
    public static class GetPrimitiveCopier 
    {
        public static BuildingPrimitive GetPrimitiveCopy(this BuildingPrimitive primitiveToCopy)
        {
        		if (primitiveToCopy == null) return null;
        
        		BuildingPrimitive primitive = new BuildingPrimitive(); 
        
        		primitive.Id = primitiveToCopy.Id;
        		
        		primitive.InternalName = primitiveToCopy.InternalName;
        		
        		primitive.ZIPCode = primitiveToCopy.ZIPCode;
        		
        		primitive.City = primitiveToCopy.City;
        		
        		primitive.Street = primitiveToCopy.Street;
        		
        		primitive.Phone = primitiveToCopy.Phone;
        		
        		primitive.ContactPerson = primitiveToCopy.ContactPerson;
        		
        		primitive.ContactPersonPhone = primitiveToCopy.ContactPersonPhone;
        		
        		primitive.HouseNo = primitiveToCopy.HouseNo;
        		
        		primitive.Deleted = primitiveToCopy.Deleted;
        		
        		primitive.Deactivated = primitiveToCopy.Deactivated;
        		
        		return primitive;
        }
        
        public static CarPrimitive GetPrimitiveCopy(this CarPrimitive primitiveToCopy)
        {
        		if (primitiveToCopy == null) return null;
        
        		CarPrimitive primitive = new CarPrimitive(); 
        
        		primitive.Id = primitiveToCopy.Id;
        		
        		primitive.RegistrationNumber = primitiveToCopy.RegistrationNumber;
        		
        		primitive.Name = primitiveToCopy.Name;
        		
        		primitive.InternalName = primitiveToCopy.InternalName;
        		
        		primitive.CarType = primitiveToCopy.CarType;
        		
        		primitive.Deleted = primitiveToCopy.Deleted;
        		
        		primitive.Capacity = primitiveToCopy.Capacity;
        		
        		primitive.TransportType = primitiveToCopy.TransportType;
        		
        		primitive.Driver_Id = primitiveToCopy.Driver_Id;
        		
        		primitive.Deactivated = primitiveToCopy.Deactivated;
        		
        		return primitive;
        }
        
        public static ClientPrimitive GetPrimitiveCopy(this ClientPrimitive primitiveToCopy)
        {
        		if (primitiveToCopy == null) return null;
        
        		ClientPrimitive primitive = new ClientPrimitive(); 
        
        		primitive.Id = primitiveToCopy.Id;
        		
        		primitive.InternalName = primitiveToCopy.InternalName;
        		
        		primitive.NIP = primitiveToCopy.NIP;
        		
        		primitive.Name = primitiveToCopy.Name;
        		
        		primitive.City = primitiveToCopy.City;
        		
        		primitive.Street = primitiveToCopy.Street;
        		
        		primitive.ZIPCode = primitiveToCopy.ZIPCode;
        		
        		primitive.HouseNo = primitiveToCopy.HouseNo;
        		
        		primitive.Phone = primitiveToCopy.Phone;
        		
        		primitive.Deleted = primitiveToCopy.Deleted;
        		
        		primitive.Deactivated = primitiveToCopy.Deactivated;
        		
        		return primitive;
        }
        
        public static ClientBuildingPrimitive GetPrimitiveCopy(this ClientBuildingPrimitive primitiveToCopy)
        {
        		if (primitiveToCopy == null) return null;
        
        		ClientBuildingPrimitive primitive = new ClientBuildingPrimitive(); 
        
        		primitive.Id = primitiveToCopy.Id;
        		
        		primitive.Client_Id = primitiveToCopy.Client_Id;
        		
        		primitive.Building_Id = primitiveToCopy.Building_Id;
        		
        		primitive.Deleted = primitiveToCopy.Deleted;
        		
        		primitive.Deactivated = primitiveToCopy.Deactivated;
        		
        		return primitive;
        }
        
        public static ContractorPrimitive GetPrimitiveCopy(this ContractorPrimitive primitiveToCopy)
        {
        		if (primitiveToCopy == null) return null;
        
        		ContractorPrimitive primitive = new ContractorPrimitive(); 
        
        		primitive.Id = primitiveToCopy.Id;
        		
        		primitive.InternalName = primitiveToCopy.InternalName;
        		
        		primitive.Name = primitiveToCopy.Name;
        		
        		primitive.ZIPCode = primitiveToCopy.ZIPCode;
        		
        		primitive.City = primitiveToCopy.City;
        		
        		primitive.Street = primitiveToCopy.Street;
        		
        		primitive.HouseNo = primitiveToCopy.HouseNo;
        		
        		primitive.Deleted = primitiveToCopy.Deleted;
        		
        		primitive.Phone = primitiveToCopy.Phone;
        		
        		primitive.Deactivated = primitiveToCopy.Deactivated;
        		
        		return primitive;
        }
        
        public static DeliveryNotePrimitive GetPrimitiveCopy(this DeliveryNotePrimitive primitiveToCopy)
        {
        		if (primitiveToCopy == null) return null;
        
        		DeliveryNotePrimitive primitive = new DeliveryNotePrimitive(); 
        
        		primitive.Id = primitiveToCopy.Id;
        		
        		primitive.Driver_Id = primitiveToCopy.Driver_Id;
        		
        		primitive.DateDrawing = primitiveToCopy.DateDrawing;
        		
        		primitive.DateOfArrival = primitiveToCopy.DateOfArrival;
        		
        		primitive.Canceled = primitiveToCopy.Canceled;
        		
        		primitive.Drawer = primitiveToCopy.Drawer;
        		
        		primitive.Car_Id = primitiveToCopy.Car_Id;
        		
        		primitive.Amount = primitiveToCopy.Amount;
        		
        		primitive.Order_Id = primitiveToCopy.Order_Id;
        		
        		primitive.Deleted = primitiveToCopy.Deleted;
        		
        		primitive.Deactivated = primitiveToCopy.Deactivated;
        		
        		primitive.Number = primitiveToCopy.Number;
        		
        		primitive.Year = primitiveToCopy.Year;
        		
        		return primitive;
        }
        
        public static DriverPrimitive GetPrimitiveCopy(this DriverPrimitive primitiveToCopy)
        {
        		if (primitiveToCopy == null) return null;
        
        		DriverPrimitive primitive = new DriverPrimitive(); 
        
        		primitive.Id = primitiveToCopy.Id;
        		
        		primitive.Name = primitiveToCopy.Name;
        		
        		primitive.Surname = primitiveToCopy.Surname;
        		
        		primitive.Phone = primitiveToCopy.Phone;
        		
        		primitive.InternalName = primitiveToCopy.InternalName;
        		
        		primitive.Deleted = primitiveToCopy.Deleted;
        		
        		primitive.Deactivated = primitiveToCopy.Deactivated;
        		
        		return primitive;
        }
        
        public static MaterialPrimitive GetPrimitiveCopy(this MaterialPrimitive primitiveToCopy)
        {
        		if (primitiveToCopy == null) return null;
        
        		MaterialPrimitive primitive = new MaterialPrimitive(); 
        
        		primitive.Id = primitiveToCopy.Id;
        		
        		primitive.Name = primitiveToCopy.Name;
        		
        		primitive.Producer_Id = primitiveToCopy.Producer_Id;
        		
        		primitive.Deliverer_Id = primitiveToCopy.Deliverer_Id;
        		
        		primitive.InternalName = primitiveToCopy.InternalName;
        		
        		primitive.Deleted = primitiveToCopy.Deleted;
        		
        		primitive.Deactivated = primitiveToCopy.Deactivated;
        		
        		primitive.MaterialType = primitiveToCopy.MaterialType;
        		
        		return primitive;
        }
        
        public static MaterialStockPrimitive GetPrimitiveCopy(this MaterialStockPrimitive primitiveToCopy)
        {
        		if (primitiveToCopy == null) return null;
        
        		MaterialStockPrimitive primitive = new MaterialStockPrimitive(); 
        
        		primitive.Id = primitiveToCopy.Id;
        		
        		primitive.Material_Id = primitiveToCopy.Material_Id;
        		
        		primitive.Amount = primitiveToCopy.Amount;
        		
        		primitive.Deleted = primitiveToCopy.Deleted;
        		
        		primitive.Deactivated = primitiveToCopy.Deactivated;
        		
        		return primitive;
        }
        
        public static OrderPrimitive GetPrimitiveCopy(this OrderPrimitive primitiveToCopy)
        {
        		if (primitiveToCopy == null) return null;
        
        		OrderPrimitive primitive = new OrderPrimitive(); 
        
        		primitive.Id = primitiveToCopy.Id;
        		
        		primitive.Recipe_Id = primitiveToCopy.Recipe_Id;
        		
        		primitive.ClientBuilding_Id = primitiveToCopy.ClientBuilding_Id;
        		
        		primitive.Amount = primitiveToCopy.Amount;
        		
        		primitive.DateOfOrder = primitiveToCopy.DateOfOrder;
        		
        		primitive.Deleted = primitiveToCopy.Deleted;
        		
        		primitive.Deactivated = primitiveToCopy.Deactivated;
        		
        		primitive.Canceled = primitiveToCopy.Canceled;
        		
        		primitive.Pump = primitiveToCopy.Pump;
        		
        		primitive.Notice = primitiveToCopy.Notice;
        		
        		primitive.PlannedDeliveryTime = primitiveToCopy.PlannedDeliveryTime;
        		
        		return primitive;
        }
        
        public static RecipePrimitive GetPrimitiveCopy(this RecipePrimitive primitiveToCopy)
        {
        		if (primitiveToCopy == null) return null;
        
        		RecipePrimitive primitive = new RecipePrimitive(); 
        
        		primitive.Id = primitiveToCopy.Id;
        		
        		primitive.Name = primitiveToCopy.Name;
        		
        		primitive.InternalName = primitiveToCopy.InternalName;
        		
        		primitive.Number = primitiveToCopy.Number;
        		
        		primitive.Granulation = primitiveToCopy.Granulation;
        		
        		primitive.Consistency = primitiveToCopy.Consistency;
        		
        		primitive.ConcreteClass = primitiveToCopy.ConcreteClass;
        		
        		primitive.Deleted = primitiveToCopy.Deleted;
        		
        		primitive.Deactivated = primitiveToCopy.Deactivated;
        		
        		return primitive;
        }
        
        public static RecipeComponentPrimitive GetPrimitiveCopy(this RecipeComponentPrimitive primitiveToCopy)
        {
        		if (primitiveToCopy == null) return null;
        
        		RecipeComponentPrimitive primitive = new RecipeComponentPrimitive(); 
        
        		primitive.Id = primitiveToCopy.Id;
        		
        		primitive.Material_Id = primitiveToCopy.Material_Id;
        		
        		primitive.Recipe_Id = primitiveToCopy.Recipe_Id;
        		
        		primitive.Amount = primitiveToCopy.Amount;
        		
        		primitive.Deleted = primitiveToCopy.Deleted;
        		
        		primitive.Deactivated = primitiveToCopy.Deactivated;
        		
        		return primitive;
        }
        
    }
}
